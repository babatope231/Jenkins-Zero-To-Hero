pipeline {
  agent any

  environment {
    DOCKER_HUB_CREDS = credentials('docker-hub-creds') // Jenkins credentials ID
  }

  stages {
    stage('Checkout SCM') {
      steps {
        checkout scm
      }
    }

    stage('Build with Maven') {
      steps {
        dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
          // Run Maven build inside a Maven Docker container
          docker.image('maven:3.9.3-eclipse-temurin-17').inside {
            sh 'mvn clean package -DskipTests'
          }
        }
      }
    }

    stage('Build and Push Docker Image') {
      steps {
        dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
          script {
            def imageTag = "babatopesdocker/ultimate-cicd:${env.BUILD_NUMBER}"
            sh "docker build -t ${imageTag} ."
            sh "echo ${DOCKER_HUB_CREDS_PSW} | docker login -u ${DOCKER_HUB_CREDS_USR} --password-stdin"
            sh "docker push ${imageTag}"
          }
        }
      }
    }

    stage('Update Deployment File') {
      steps {
        echo 'Updating deployment files...'
        // Your deployment update steps here
      }
    }
  }

  post {
    success {
      echo 'Pipeline succeeded!'
    }
    failure {
      echo 'Pipeline failed. Please check the logs.'
    }
  }
}
